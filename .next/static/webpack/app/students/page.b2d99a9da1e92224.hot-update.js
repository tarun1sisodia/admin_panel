"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/students/page",{

/***/ "(app-pages-browser)/./lib/report-utils.ts":
/*!*****************************!*\
  !*** ./lib/report-utils.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   downloadReport: () => (/* binding */ downloadReport),\n/* harmony export */   generateClassAttendanceReport: () => (/* binding */ generateClassAttendanceReport),\n/* harmony export */   generateStudentPdfReport: () => (/* binding */ generateStudentPdfReport)\n/* harmony export */ });\n/* harmony import */ var _firebase_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase-utils */ \"(app-pages-browser)/./lib/firebase-utils.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jspdf-autotable */ \"(app-pages-browser)/./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.mjs\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\n\n\n\n\n// Initialize Supabase client\nconst supabaseUrl = 'https://otcqeieukikymmsjwfeu.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im90Y3FlaWV1a2lreW1tc2p3ZmV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI1MjA5MDMsImV4cCI6MjA1ODA5NjkwM30.M3D533la8914BPuHQkyHWnoxN5OM4N_-vVpMDvKDMbk';\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__.createClient)(supabaseUrl, supabaseKey);\n// Generate and save a PDF report for a student\nasync function generateStudentPdfReport(studentId) {\n    try {\n        // Get student data\n        const student = await (0,_firebase_utils__WEBPACK_IMPORTED_MODULE_0__.getStudent)(studentId);\n        const attendance = await (0,_firebase_utils__WEBPACK_IMPORTED_MODULE_0__.getStudentAttendance)(studentId);\n        // Create PDF document\n        const doc = new jspdf__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n        // Add content to PDF\n        doc.setFontSize(22);\n        doc.text(\"Student Report: \".concat(student.name), 20, 20);\n        doc.setFontSize(14);\n        doc.text(\"Course: \".concat(student.courseYear), 20, 40);\n        doc.text(\"Parent Name: \".concat(student.parentName || \"N/A\"), 20, 50);\n        doc.text(\"Roll Number: \".concat(student.rollNumber || \"N/A\"), 20, 60);\n        doc.text(\"Email: \".concat(student.email || \"N/A\"), 20, 70);\n        doc.text(\"Phone: \".concat(student.phone || \"N/A\"), 20, 80);\n        doc.text(\"Parent Phone: \".concat(student.parentPhone || \"N/A\"), 20, 90);\n        // Add attendance summary\n        const totalRecords = attendance.length;\n        const presentCount = attendance.filter((record)=>record.status === \"present\").length;\n        const absentCount = attendance.filter((record)=>record.status === \"absent\").length;\n        const attendanceRate = totalRecords > 0 ? Math.round(presentCount / totalRecords * 100) : 0;\n        doc.text('Attendance Summary:', 20, 110);\n        doc.text(\"Total Classes: \".concat(totalRecords), 30, 120);\n        doc.text(\"Present: \".concat(presentCount), 30, 130);\n        doc.text(\"Absent: \".concat(absentCount), 30, 140);\n        doc.text(\"Attendance Rate: \".concat(attendanceRate, \"%\"), 30, 150);\n        // Add attendance records table\n        doc.text('Attendance Records:', 20, 170);\n        // Create table data\n        const tableColumn = [\n            \"Date\",\n            \"Status\",\n            \"Notes\"\n        ];\n        const tableRows = attendance.map((record)=>[\n                new Date(record.date).toLocaleDateString(),\n                record.status,\n                record.notes || \"\"\n            ]);\n        // Use autoTable\n        // @ts-ignore\n        doc.autoTable({\n            startY: 180,\n            head: [\n                tableColumn\n            ],\n            body: tableRows\n        });\n        // Get PDF as array buffer\n        const pdfBytes = doc.output('arraybuffer');\n        // Generate a unique filename\n        const fileName = \"student_\".concat(studentId, \"_report_\").concat(Date.now(), \".pdf\");\n        // Upload to Supabase\n        const { data, error } = await supabase.storage.from('pdf') // Using the 'pdf' bucket as specified in your policies\n        .upload(fileName, new Uint8Array(pdfBytes), {\n            contentType: 'application/pdf'\n        });\n        if (error) {\n            console.error(\"Supabase upload error:\", error);\n            throw error;\n        }\n        // Get public URL\n        const { data: urlData } = supabase.storage.from('pdf').getPublicUrl(fileName);\n        const downloadURL = urlData.publicUrl;\n        // Update report record in Firebase database\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)(_firebase_utils__WEBPACK_IMPORTED_MODULE_0__.reportsCollection, {\n            studentId,\n            studentName: student.name,\n            courseYear: student.courseYear,\n            type: 'student-report',\n            format: 'pdf',\n            url: downloadURL,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        });\n        return downloadURL;\n    } catch (error) {\n        console.error(\"Error generating student report:\", error);\n        throw error;\n    }\n}\n// Generate a class attendance report for a specific date or date range\nasync function generateClassAttendanceReport(courseYear, startDate, endDate) {\n    try {\n        // Implementation for class attendance report\n        // Similar to student report but with different data focus\n        // This would be implemented based on your specific requirements\n        return \"https://example.com/reports/class_report.pdf\"; // Replace with actual implementation\n    } catch (error) {\n        console.error(\"Error generating class attendance report:\", error);\n        throw error;\n    }\n}\n// Helper function to download a report directly in the browser\nfunction downloadReport(url, fileName) {\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\nconst handleDownloadReport = async (id)=>{\n    setIsGeneratingReport(true);\n    try {\n        const reportUrl = await generateStudentPdfReport(id);\n        toast({\n            title: \"Report generated\",\n            description: \"The student report has been generated successfully.\"\n        });\n        // Open the report in a new tab\n        window.open(reportUrl, \"_blank\");\n    } catch (error) {\n        console.error(\"Error generating report:\", error);\n        toast({\n            title: \"Error\",\n            description: \"Failed to generate report. Please try again.\",\n            variant: \"destructive\"\n        });\n    } finally{\n        setIsGeneratingReport(false);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/report-utils.ts\n"));

/***/ })

});